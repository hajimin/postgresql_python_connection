create function clone()
    returns TABLE(sys_id integer, sys_type_id integer, d_group_1_id integer, d_group_2_id integer, area_id integer, data_type_id integer, seq_id integer, seq_sub_id integer, dev_gubun character varying, dev_nm character varying, dtct_ts timestamp without time zone, item_nm character varying, val double precision, error character varying, default_val double precision, upper_limit double precision, lower_limit double precision, use_mapp double precision, upper_limit_w double precision, lower_limit_w double precision, use_mapp_w double precision, upper_limit_d double precision, lower_limit_d double precision, use_mapp_d double precision, upper_limit_dl double precision, lower_limit_dl double precision, use_mapp_dl double precision)
    language plpython3u
as
$$
    import pymysql
    import pandas as pd
    from sqlalchemy import create_engine, event
    from datetime import datetime
    import cx_Oracle

    OracleEngine = create_engine("oracle+cx_oracle://id:pw@localhost/name")
    PostgreEngine = create_engine("postgresql://id:pw@localhost/name")

    table_list = ['dt102','dt102_combine']
    df = []
    for table_name in table_list:
        rv = pd.read_sql_query("select max(time_stemp) as time_stemp from %s" % table_name, PostgreEngine) 
        last_ts=''
        if rv.iloc[0]['time_stemp'] != None:
            last_ts = rv.iloc[0]['time_stemp']
            dt102_df = pd.read_sql_query("""
                SELECT *
                FROM %s 
                WHERE TIME_STEMP > last_ts
                AND TIME_STEMP < (SELECT to_char(to_date(SUBSTR( %(last_ts)s ,1,14),'YYYY-MM-DD HH24:MI:SS') - (interval '1' MINUTE),'YYYYMMDDHH24MISS')  max_ts FROM dual)
            """ % table_name, OracleEngine,params={'last_dtct':last_ts})
        else:
            dt102_df = pd.read_sql_query("""
                WITH datetime AS (
                SELECT to_char(min.min_ts,'YYYYMMDDHH24MISS') AS min_ts ,to_char(min.min_ts + (interval '10' MINUTE), 'YYYYMMDDHH24MISS') AS max_ts
                FROM 
                 ( SELECT  to_date(SUBSTR( min(TIME_STEMP),1,14),'YYYY-MM-DD HH24:MI:SS') - (interval '1' MINUTE) min_ts
                  FROM dt102) min )
                SELECT *
                FROM %s 
                WHERE TIME_STEMP > (SELECT min_ts FROM datetime)
                AND TIME_STEMP <= (SELECT max_ts FROM datetime)
            """ % table_name, OracleEngine)

        dt102_df["time_stemp"] = dt102_df['time_stemp'].apply(lambda s: f'{s[:4]}-{s[4:6]}-{s[6:8]} {s[8:10]}:{s[10:12]}:{s[12:14]}.{s[14:17]}')
        dt102_df["time_stemp"] = pd.to_datetime(dt102_df["time_stemp"])

        print(dt102_df)

$$;

alter function clone() owner to postgres;
